@model CompxERP.Models.Jourmaster
@{
    Layout = null;
}
 
    <script src="~/Scripts/jquery.inputmask.js"></script>
   <script src="~/Scripts/jquery.inputmask.date.extensions.js"></script>
    
<script >
$(document).ready(function () {
    try{$(".pickdate").inputmask("dd/mm/yyyy", { "placeholder": "dd/mm/yyyy" });
             
        $('.pickdate').each(function () {
            if ($(this).val() == '') {
                var today = new Date();
                var dd = today.getDate();
                var mm = today.getMonth() + 1; //January is 0!

                var yyyy = today.getFullYear();
                if (dd < 10) {
                    dd = '0' + dd;
                }
                if (mm < 10) {
                    mm = '0' + mm;
                }
                var today = dd + '/' + mm + '/' + yyyy;
                $(this).val(today);
            }
        });
    } catch (e) { }
});
    </script>
            

    <script>
        $(function () {
            //GetPartyid();
            $("#sMstdate").focus();
            //$("#ChallanDate").datepicker();
            // $("#sMstdate").datepicker();
             
            debugger;
          
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            if (hashes.length > 1) { $('#MstCode').val(getUrl()["mstCode"]); }
            else { $('#MstCode').val(0); }
            var iType = 0;
            iType = getUrl()["MstType"]
            $('#MstType').val(iType);
            //if (iType == 42) { $('.C42').show(); $('.C43').hide(); $('#lgId').html("Sale Entry"); $('#sHeader').html("Sale Entry"); $('#lblPurType').html("Sale"); $('#lblBroker').html("Executive"); document.title = "Sale Entry"; $("#hdnAcGroup").val("21"); }
            //else if (iType == 43) { $('.C42').hide(); $('.C43').show(); $('#lgId').html("Purchase Entry"); $('#lblBroker').html("Broker"); $('#sHeader').html("Purchase Entry"); $('#lblPurType').html("Purchase"); document.title = "Purchase Entry"; $("#hdnAcGroup").val("22"); } else { $('#lgId').html("Park Lead / Inquiry"); $('#sHeader').html("Park Lead / Inquiry"); $("#hdnAcGroup").val("21"); }
             
            var iMstCode = 0;
             
            if (parseInt($('#mstcode').val()) > 0)
                iMstCode = $('#mstcode').val();
             
            if (iMstCode > 0 &&  Boolean( $('#IsEdit').val()) == true) {
               
                //GenratedItemTable(Item1); 
                debugger;
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetParkLeadDet", "Quotation")',
                    data: { "iMstcode": + iMstCode , "iCompcode": 62, "iType": 1147 },
                    success: function (data) {
                        itm = data;
                       // GenratedItemTable(data);
                        GenratedLeadItem(data);
                    }
                });
                
            }
           
        });
        var itm = [];
        var vTaxData = [];
        var a;
        $(document).ready(function () {
          
            $(document).on("click", ".deleteContact_Lead", function () {
                try {
                if (itm.length > 0) {
                    debugger;
                    var index = $(this).closest("tr").index();

                    var $row = $(this).closest("tr");        // Finds the closest row <tr>
    $tds = $row.find("td:nth-child(3)"); // Finds the 2nd <td> element
                    
    var iSubCate = 0;
    var iCate = 0;
    var iItm = 0;
 
    debugger;
    $('#ItemNm').val(itm[index].itditem);
    //$('#ItemNm').val(itm[index].itditem);
    $('#Qty').val(itm[index].itdquan);
    $('#Rate').val(itm[index].itdrate);
     $('#Amt').val(itm[index].Amt);
                    //$('#msttimR').val($row.find("td:nth-child(7)").text());
    $('#Remark').val(itm[index].itdrema);

                    $(this).closest("tr").remove(); // closest used to remove the respective 'tr' in which I have my controls 
                    itm.splice(index, 1);

                    $('#sItemDet').val('{"LstItem":' + JSON.stringify(itm) + '}');
                }
                }
                catch (err) {
                    alert(err.message);
                }
            });

            
        });
        

        //var trn = [];

         

        function getUrl() { 
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }
         



    </script>
     <script type="text/javascript">
         $(document).ready(function () {
             $(".digit").keypress(function (e) {
                 if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                     $("#errormsg").html("Digits Only").show().fadeOut("slow");
                     return false;
                 }
             });

             $('#Print').click(function () {
                 window.open('../../PuSL/Print?comp=' + $("#compcode").val() + '&mstCode=' + $("#mstcode").val() + '&msttype=' + $("#msttype").val() + '&mencode=104', '_blank', 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=yes, resizable=no, copyhistory=no, width=600, height=680, top=50, left=50');
             });
         });
        

</script>
    <style>
        body {
            background-color: #e6e4e4;
        }

        .btn-color {
            background-color: transparent;
            background-image: url("/Images/remove.svg");
            background-repeat: no-repeat;
            background-size: 100% 100%;
            border: medium none;
            height: 18px;
            width: 16px;
        }

        th {
            padding: 5px;
            color: #fff;
        }

        td {
            font-size: 12px;
        }

        .table.table-fixed.table-bordered.j_table_new.table-striped td {
            padding: 5px !important;
        }
    </style>
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        <!----compex_heading---->
       <div class="compex_head">
            <div class="container-fluid">
                
                <div class="col-md-12 col-sm-12 col-xs-12"><h2>Park Lead / Inquiry<button type="button" class="close" onclick="ClearDvData();">&times;</button></h2></div>
               
            </div>
        </div>
        <!----compex_heading end---->
        <!----compex_BODY---->
        <div class="compex_form">
            <div class="container-fluid">
                <div id ="dvPuSL" class="Personal_form">
                   
                    <div style="width: 100%; float: left; margin-bottom: 5px;">
                        <div class="col-sm-2 padd_l padd_5">
                            <fieldset style="height: 165px;">
                                 
                                @Html.ValidationMessageFor(model => model.mstdate, "", new { style = "color:red;" })
                                @Html.ValidationMessageFor(model => model.mstcode, "", new { style = "color:red;" })
                                @Html.ValidationMessageFor(a => a.msttimes, "", new { style = "color:red;" })
                                <div class="form-group">
                                    <label class="control-label col-sm-4 padd_l padd_5">Code</label>
                                    <div class="col-sm-8 padd_l padd_5">
                                        @Html.HiddenFor(model => model.acctcode)
                                        @Html.HiddenFor(model => model.acctledg)@*170830*@
                                        @Html.HiddenFor(model => model.ItemID) @Html.HiddenFor(model => model.IsEdit)
                                        @Html.HiddenFor(model => model.mstptcode) 
                                        @Html.HiddenFor(model => model.mstcode_Print)    
                                        @Html.HiddenFor(model => model.msttype)
                                        @Html.HiddenFor(model => model.mstrefc)
                                        @Html.HiddenFor(model => model.compcode)
                                        @Html.HiddenFor(model => model.PU_Qty2)
                                        @Html.HiddenFor(model => model.sItemDet)
                                        @Html.HiddenFor(model => model.ItemRemark)
                                        @Html.HiddenFor(model => model.sTrnDet)
  @Html.HiddenFor(model => model.hdnAcGroup)
                                          @Html.HiddenFor(model => model.acctcity)
                                      @*   @Html.HiddenFor(model => model.acctstat)*@
                                         @Html.HiddenFor(model => model.mstcode ,new {   @Value = ViewBag.MstCode  })

                                        <input type="hidden" id="GSTStateVal" value="0" />@*170830*@
                                        @Html.ValidationMessageFor(a => a.mstptcode)

                                       @* @Html.TextBoxFor(model => model.mstcode, new { @class = "form-control",  @readonly = true })*@
                                        @* @Html.TextBoxFor(model => model.mstprtc, new { @class = "form-control", @Value = ViewBag.MstCode, @readonly = true })*@
                                            @Html.TextBoxFor(model => model.mstprtc, new { @class = "form-control",   @readonly = true })

                                         

                                    </div>

                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4 padd_l padd_5">Date</label>
                                    <div class="col-sm-8 padd_l padd_5">
                                        @Html.TextBoxFor(m => m.sMstdate, "{0:dd/MM/yyyy}", new { @class = "form-control pickdate", placeholder = "Enter Date" })
                                    </div>
                                    @*<div class="col-sm-5 padd_l padd_5">
                                        @Html.TextBoxFor(a => a.msttimes, new { @class = "form-control t1", @readonly = true })
                                    </div>*@
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4 padd_l padd_5">Lead ID</label>
                                    @*<div class="col-sm-5 padd_l padd_5 C42">
                                        @Html.TextBoxFor(model => model.mstchnH, new { @maxlength = "10", @class = "form-control" , @readonly = true })
                                    </div>
                                    <div class="col-sm-8 padd_l padd_5 C42">
                                        @Html.TextBoxFor(model => model.mstchnV, new { @maxlength = "12", @class = "form-control" })
                                    </div>*@
                                    <div class="col-sm-8 padd_l padd_5 C42">
                                        @Html.TextBoxFor(model => model.mstchno, new { @maxlength = "11", @class = "form-control" ,@readonly = true , @Value = ViewBag.mstchno })
                                    </div>
                                   @* <div class="col-sm-11 padd_l padd_5 C43">
                                        Reverse Charge Applicable
                                        <input type="checkbox" />
                                    </div>*@
                                </div>
                            </fieldset>
                        </div>

                        <div class="col-sm-4 padd_l padd_5">
                            <fieldset style="height: 165px;">
                                @Html.ValidationMessageFor(model => model.Broker, "", new { style = "color:red;" })

                                  <div class="form-group">
                                      <label class="control-label col-sm-5 padd_l padd_5">From Calling </label> 
                                    <div class="col-sm-7 padd_l padd_5">
            @Html.DropDownList("mstJobNo",new List<SelectListItem> { } , new { @class = "form-control" ,@onchange="GetCallingDet();" }) 
            @Html.ValidationMessageFor(model => model.mstContactType)
                                     
                                </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-sm-5 padd_l padd_5">Party / Inquiry Name</label>
                                    <div class="col-sm-7 padd_l padd_5">
                                        
                                        @Html.TextBoxFor(model => model.acctname, new { @class = "form-control capital_let" ,@autocomplete="off"  })
                                        @Html.HiddenFor(model => model.PartyID)
                                    </div>

                                </div>
                                <div class="form-group">
                                      <label class="control-label col-sm-5 padd_l padd_5">Source </label> 
                                    <div class="col-sm-7 padd_l padd_5">
            @Html.DropDownList("mstContactType",new List<SelectListItem> { 
           new SelectListItem { Text="-- Select --", Value="0"},
           new SelectListItem { Text="NewsPaper", Value="1"},
           new SelectListItem { Text="EMail", Value="2"}, 
            new SelectListItem { Text="Walk In", Value="3"}, 
            new SelectListItem { Text="Existing Client", Value="4"}, 
            new SelectListItem { Text="On Site Visit", Value="5"}, 
            new SelectListItem { Text="Telepfonic", Value="5"}, 
           } , new {style="width:100%;" }) 
            @Html.ValidationMessageFor(model => model.mstContactType)
                                     
                                </div>
                                </div>
                                 <div class="form-group">
                                @*    <label class="control-label col-sm-5 padd_l padd_5">Reference By</label>
                                    <div class="col-sm-7 padd_l padd_5"> 
                                         @Html.DropDownList("mstrfvc",new List<SelectListItem> { 
           new SelectListItem { Text="-- Select --", Value="0"},
           new SelectListItem { Text="Distributor", Value="1"},
           new SelectListItem { Text="Dealer", Value="2"}, 
            new SelectListItem { Text="Agent", Value="3"},  
            new SelectListItem { Text="DIPL", Value="4"},  
           } , new {style="width:200px;" , @onchange ="ShowDealer_Park();" }) 
                                    </div>*@
                                       <label class="control-label col-sm-5 padd_l padd_5">Ratio</label>
                        <div class="col-sm-7 padd_l padd_5">
                             @Html.DropDownList("Ratio", new List<SelectListItem> {  
           new SelectListItem { Text="25%", Value="25"},   
           new SelectListItem { Text="50%", Value="50"},   
           new SelectListItem { Text="75%", Value="75"},   
           new SelectListItem { Text="100%", Value="100"},   
           }, new { @class = "form-control" ,style="100%;"})
                              
                        </div>

                                </div>
                                 <div class="form-group">
                                   @* <label class="control-label col-sm-5 padd_l padd_5">Reference Name</label>
                                    <div class="col-sm-7 padd_l padd_5"> 
                                         @Html.DropDownList("mstrfvt",new List<SelectListItem> { 
           new SelectListItem { Text="-- Select --", Value="0"}, 
           } , new {style="width:200px;"  }) 
                                         
                                    </div>*@
                                      <label class="control-label col-sm-5 padd_l padd_5">Calling Comment</label>
                        <div class="col-sm-7 padd_l padd_5">
                           <input type="text" id="txtComment"  class = "form-control" style="width:100%" />  
                        </div>
                                </div>
                                  @*<div class="form-group">
                                    <label class="control-label col-sm-5 padd_l padd_5">Industries</label>
                                    <div class="col-sm-7 padd_l padd_5">
                                         @Html.DropDownList("mstexec",new List<SelectListItem> { 
           new SelectListItem { Text="-- Select --", Value="0"}, 
         new SelectListItem { Text="Cotton", Value="1"},     
           new SelectListItem { Text="Chemical", Value="2"},
            new SelectListItem { Text="Electrical", Value="3"},     
            new SelectListItem { Text="Food & beverages", Value="4"},
            new SelectListItem { Text="Furniture", Value="5"},    
            new SelectListItem { Text="Fabric & Footware", Value="6"},  
            new SelectListItem { Text="Medical", Value="7"},  
            new SelectListItem { Text="Machinary", Value="8"}, 
            new SelectListItem { Text="Metal", Value="9"},  
            new SelectListItem { Text="Plastic", Value="10"},  
           } , new {style="width:200px;"  }) 
                                    </div> 
                                </div>*@
                            </fieldset>

                        </div>@* style="display: none;"*@
                        <div class="col-sm-6 padd_l padd_5">
                            <fieldset style="height: 165px;">  
                              

                                <div class="form-group">
                                      <label class="control-label col-sm-2 padd_l padd_5" style="padding-right:0px;">Contact Person</label>
                                    <div class="col-sm-4 padd_l padd_5">
                                        @Html.TextBoxFor(model => model.mstContactPerson, new { @class = "form-control" ,@autocomplete="off"})
                                    </div> 
                                     <label class="control-label col-sm-2 padd_l padd_5">Inquiry Date</label>
                                    <div class="col-sm-4 padd_l padd_5">
                                        @Html.TextBoxFor(model => model.ChallanDate, "{0:dd/MM/yyyy}", new { @class = "form-control pickdate", placeholder = "Enter Date"}) 
                                    </div>
                                </div>

                                <div class="form-group">
                                   <label class="control-label col-sm-2 padd_l padd_5">Mobile</label>
                                    <div class="col-sm-4 padd_l padd_5">
                                        @Html.TextBoxFor(model => model.NewMobile, new {  @maxlength = 10, @NumberOnly = true,@autocomplete="off", @class = "form-control"})
                                         @Html.ValidationMessageFor(model => model.NewMobile)

                                    </div> 
                                     <label class="control-label col-sm-2 padd_l padd_5">Email</label>
                                    <div class="col-sm-4 padd_l padd_5"> 
                                         @Html.TextBoxFor(model => model.EMail, new { @class = "form-control" ,@autocomplete="off"})
                                                    @Html.ValidationMessageFor(model => model.EMail )

                                    </div> 
                                </div>
                               @*  <div class="form-group">
                                   <label class="control-label col-sm-2 padd_l padd_5">Address 1 </label>
                                    <div class="col-sm-10 padd_l padd_5">
                                        @Html.TextBoxFor(model => model.mstJobNo, new { @class = "form-control" ,placeholder ="Address House / Block No ,Lane /Street" })
                                    </div> 
                                     
                                </div>*@
                                <div class="form-group">
                                   <label class="control-label col-sm-2 padd_l padd_5">Address </label>
                                    <div class="col-sm-10 padd_l padd_5">
                                        @Html.TextBoxFor(model => model.mstDrawNo, new { @class = "form-control",placeholder ="Address House / Block No ,Lane /Street" })
                                    </div> 
                                     
                                </div>

                               
<div class="form-group">
    

     <label class="control-label col-sm-2 padd_l padd_5">Country</label>
    <div class="col-sm-2 padd_l padd_5">
    @*  @Html.TextBoxFor(model => model.compstat, new { @class="form-control" ,autocomplete="off"}) *@
         @Html.DropDownList("CateID",new List<SelectListItem> {  
           new SelectListItem { Text="India", Value="1"},
           new SelectListItem { Text="England", Value="2"}, 
           new SelectListItem { Text="Bahrain", Value="3"}, 
           new SelectListItem { Text="Iran", Value="4"}, 
           new SelectListItem { Text="Iraq", Value="5"}, 
           new SelectListItem { Text="Kuwait", Value="6"}, 
           new SelectListItem { Text="Northern Ireland", Value="7"}, 
           new SelectListItem { Text="Oman", Value="8"}, 
           new SelectListItem { Text="Saudi Arabia", Value="9"}, 
           new SelectListItem { Text="Scotland", Value="10"}, 
           new SelectListItem { Text="South africa", Value="11"}, 
           new SelectListItem { Text="UAE", Value="12"}, 
           new SelectListItem { Text="Wales", Value="13"}, 
           }, new { @class="form-control" ,  style = "width:100px;" } )   
    </div>   

    <label class="control-label col-sm-1 padd_l padd_5">State</label>
    <div class="col-sm-3 padd_l padd_5">
         @Html.DropDownList("acctstat", (SelectList)ViewBag.vwState, "--Select--", new { @class = "form-control", @onchange = "FillCity();" })  
     @* @Html.TextBoxFor(model => model.acctstat, new { @class="form-control" ,autocomplete="off" , @style = "width:120px;"})
     
           @Html.DropDownList("acctstat",new List<SelectListItem> {  
           new SelectListItem { Text="M.P.", Value="1"},   
           }, new { @class="form-control" , @style = "width:120px;" } )   
       *@

          @* @Html.DropDownList("compstat", ViewBag.compstat as SelectList, "--Select--" , new { @class = "form-control", style = "width:250px;"  } )*@
       
    </div>   
       <label class="control-label col-sm-1 padd_l padd_5">City </label>
    <div class="col-sm-2 padd_l padd_5"> 
       @Html.DropDownList("mstrvsc", (SelectList)ViewBag.vwCityNm, "--Select--", new { @class = "form-control" })  
           @* 
          @Html.DropDownList("mstrvsc",new List<SelectListItem> {  
            new SelectListItem { Text="Indore", Value="1834"},
           new SelectListItem { Text="Bhopal", Value="1831"}, 
           new SelectListItem { Text="Ujjain", Value="1904"}, 
           new SelectListItem { Text="Khandwa", Value="4493"}, 
           new SelectListItem { Text="Khargone", Value="4494"}, 
           new SelectListItem { Text="Ratlam", Value="1876"},      
           }, new { @class="form-control" , @style = "width:100px;" } )   *@
      
    </div> 
          
</div>

                            </fieldset>
                        </div>
                    </div>

    <fieldset class="mrg_bottom">
                        @Html.ValidationMessageFor(model => model.acctname, "", new { style = "color:red;" })
                        @Html.ValidationMessageFor(model => model.Amt, "", new { style = "color:red;" }) 
                        <table class="table table-fixed table-bordered j_table_new" id="example" width="100%" cellspacing="0">
                            <thead class="thead-default">
                                <tr>
                                   @* <th width="15%">Category</th>
                                    <th width="15%">Sub Category</th>*@
                                    <th width="30%">Item</th>
                                    <th width="10%">Qty</th> 
                                    <th width="10%">Rate</th> 
                                    <th width="10%">Amount</th> 
                                    <th width="30%">Remark</th>
                                    <th width="10%">&nbsp;</th>
                                </tr>
                                <tr>
                                   @* <th width="15%"> @Html.DropDownList("category", (SelectList)ViewBag.vwCategory ,  "--Select--" ,new { @class = "form-control",  required = "required", @onchange="FillSubCategory()" })</th>
                                     <th width="15%"> @Html.DropDownList("subCategory", (SelectList)ViewBag.vwCategory ,  "--Select--" ,new { @class = "form-control",  required = "required", @onchange="getItems()" }) </th>*@
                                    <th width="30%">  
                                        @Html.DropDownList("ItemNm", ViewBag.ItemNm as SelectList, "--Select--" , new { @class = "form-control", style = "width:350px;"  } )
</th>
                                    <th width="10%">@Html.TextBoxFor(model => model.Qty, new { @class = " form-control text-right", @maxlength = 7 ,@autocomplete=​"off" , onblur = "getNetAmt()"  })</th> 
                                    <th width="10%">@Html.TextBoxFor(model => model.Rate, new { @class = " form-control text-right", @maxlength = 7 ,@autocomplete=​"off" , onblur = "getNetAmt()"  })</th> 
                                   @* <th width="10%"> @Html.TextBoxFor(model => model.msttimR, "{0:dd/MM/yyyy}", new { @class = "form-control pickdate", placeholder = "Enter Date"}) </th>*@
                        <th width="10%">@Html.TextBoxFor(model => model.Amt, new { @class = " form-control text-right", @maxlength = 10 ,@autocomplete=​"off"    })</th> 
                                    <th width="30%">@Html.TextBoxFor(model => model.Remark, new { @class = "form-control" ,@autocomplete=​"off" })</th>
                                    <th width="10%">
                                        <input type="button" id="addItem" value="add" class="btn btn-default" /></th>
                                </tr>
                            </thead>
                        </table>

                        <div id="ShowTable_Lead" class="item_styl clearfix tablecontainer" style="height: 220px;"></div>

                    </fieldset>
                
                 <fieldset>  
                    <div class="form-group" style="margin-top: 10px;">
                      @*   <label class="control-label col-sm-1 padd_l padd_5">Inquiry For</label>
                         <div class="col-sm-2 padd_l padd_5"> 
                             @Html.DropDownList("ItemNm", ViewBag.ItemNm as SelectList, "--Select--" , new { @class = "form-control" } )
                         </div>*@

                        <label class="control-label col-sm-1 padd_l padd_5">Remark</label>
                        <div class="col-sm-8 padd_l padd_5">
                            @Html.TextBoxFor(model => model.mstrema, new { @class = "form-control" })
                        </div>
                         
                       

                        <div class="col-sm-12 padd_l padd_5" style="margin-top:10px;text-align:center">

                             <input type="button" id="InsLead" value="Save" class="btn btn-default" style="margin-top:0px;"/> 
                            <button type="button" class="btn btn-default" onclick="ClearDvData();">Close</button>
                            @*  <input type="submit" value="Save" class="btn-default" style="margin-top: 0px;font-size:16px;" /> 
                            @Html.ActionLink("<<<<", "ParkLead", new { MstCode = Model.mstcode - 1 , MstType = 1147, comp = 62, id = Model.mstcode - 1  }, new { @class = "btn-default", style ="font-size:16px", title = "Previouse" }) 
                             @Html.ActionLink(">>>>", "ParkLead", new { MstCode = Model.mstcode + 1 , MstType = 1147, comp = 62, id = Model.mstcode + 1  }, new { @class = "btn-default", style ="font-size:16px", title = "Next" }) *@

                             @*   @Html.ActionLink("Create New", "ParkLead","Quotation" ,new { id=0, MstType= "1147", @class = "btn btn-default", style ="font-size:16px;margin-top:0px;" })
                          <input type="button" id="Print" value="Print"  class="btn-default" />   *@
                        </div>

                    </div>
                    </fieldset> 
                </div>
            </div>
        </div>
        
       
    } 

    @{
        if (TempData["message"] != null && TempData["message"] == "Saved Successfully ...")
        { 
    <script type="text/javascript">
        alert(TempData["message"]);
       // alert(@Html.Raw(Json.Encode(TempData["message"])));
    </script>
    }
}




<script type ="text/javascript">
    
    //SetVoucherNo();
    GetCalling();
    //function SetVoucherNo() {
    //    debugger;
    //    var sVoucher = ""; var someDate = new Date();
    //    //debugger;
    //    //alert($('#mstcode').val());
    //    sVoucher = someDate.getFullYear().toString().substr(2, 2) + '' + zeroFill(someDate.getMonth() + 1) + '' + someDate.getDate() + '' + GetVoucherNo($('#mstcode').val());
    //    $('#mstchnV').val(sVoucher);

    //}
    function zeroFill(i) {
        return (i < 10 ? '0' : '') + i
    }

    function GetVoucherNo(ChNo) {
        var str = new String(ChNo);
        if (str.length == 1)
            return "00" + str;
        else if (str.length == 2)
            return "0" + str;
        else
            return str;
    }


    $('#addItem').click(function () {
       
        var i = 0;
        debugger;
        if ($('#ItemNm').val() == '') { alert('Please Select Item !'); return; }

        if ($('#ItemNm').val() == '') { $('#ItemNm').siblings('span.error').css('visibility', 'visible'); }
        else { $('#ItemNm').siblings('span.error').css('visibility', 'hidden'); i++; }
        if ($('#Qty').val() == '') { $('#Qty').siblings('span.error').css('visibility', 'visible'); }
        else { $('#Qty').siblings('span.error').css('visibility', 'hidden'); i++; }

        if ($('#Remark').val() == '') {
            //$('#Remark').siblings('span.error').css('visibility', 'visible');
            $('#Remark').siblings('span.error').css('visibility', 'hidden');
            i++;
        } else {
            $('#Remark').siblings('span.error').css('visibility', 'hidden');
            i++;
        }

        var iAcctCode = 0; iUnitID = 0; iTaxPer = 0;iRatePer = 0;
        if ($('#acctcode').val() != '') { iAcctCode = $('#acctcode').val() }
        if ($('#Rate').val() != '') { iRatePer = $('#Rate').val() }
        var iCases = 0;

        if (i == 3) {
            debugger;
            itm.push({
                SrNo: itm.length + 1,
                itdmill: $('#category').val(),
                CateNm: $('#category :selected').text(),

                itdgodo: $('#subCategory').val(),
                SubCateNm: $('#subCategory :selected').text(),
                GSTStateVal:1,
                itditem: $('#ItemNm').val(),
                ddlItem: $('#ItemNm :selected').text(),
                itdquan: $('#Qty').val(),
                itdrate: iRatePer ,//$('#Rate').val(),
                Amt: $('#Amt').val(),
                Sitdexpd: $('#msttimR').val(),
                itdrema: $('#Remark').val(),
            });
            $('#ItemNm').val('0').focus(); $('#msttimR').val('');
            $('#Qty').val(''); $('#ItemNm').val(''); $('#Rate').val('');
            $('#Remark').val('');
        }
        GenratedLeadItem(itm);
        //GenratedItemTable(itm);
    });


    function ShowDealer_Park() {
        debugger; 
        $.get("FillReference", { RefTypeID: $("#mstrfvc").val() }, function (data) {
                if (data != null)
                {
                    $('#mstrfvt').empty();

                    var opt = new Option('--Select--', 0);
                    $("#mstrfvt").append(opt);

                    for (var i = 0; i < data.length; i++) {
                        opt = new Option(data[i].studName, data[i].studCode);
                        $("#mstrfvt").append(opt);
                    }
                }
            });
    }

    function GetCalling() {
        debugger;
      
        $.get("../Quotation/GetCalling", {}, function (data) {
            if (data != null) {
                $('#mstJobNo').empty();

                var opt = new Option('--Select--', 0);
                $("#mstJobNo").append(opt);

                for (var i = 0; i < data.length; i++) {
                    opt = new Option(data[i].Mobile + "~" + data[i].sName, data[i].Mobile); // opt = new Option(data[i].Mobile, data[i].Mobile);
                    $("#mstJobNo").append(opt);
                }
            }
        });
    }
    function GetCallingDet() {
        debugger;

        $.get("../Quotation/GetCallingDet", { sMobile: $("#mstJobNo").val() }, function (data) {
            if (data != null) {
                var City = 0;
                //$('#acctname').val(data[i].Mob);
                $('#acctname').val(data[0].Name);
                $('#txtComment').val(data[0].Remark);
                $('#Ratio').val(data[0].Per);
                $('#ItemNm').val(data[0].ItemID);

                $('#mstDrawNo').val(data[0].CityNM);
                $('#acctstat').val(data[0].StateID);
                City = data[0].CityID;
                $('#mstrvsc').empty();
                $.get("../Master/GetCityList", { iState: $("#acctstat").val() }, function (data) {
                    if (data != null) {
                        var opt = new Option('--Select--', 0);
                        $("#mstrvsc").append(opt);

                        for (var i = 0; i < data.length; i++) {
                            opt = new Option(data[i].cityname, data[i].citycode);
                            $("#mstrvsc").append(opt);
                        }
                        $('#mstrvsc').val(City);
                    }
                });

            }
        });
    }
    $('#InsLead').click(function () {
        debugger;

        if ($('#acctname').val() == "") {
            $('#acctname').focus();
            alert('Please Enter Party Name ...');
            return
        }
        if ($('#sItemDet').val() == "") { 
            alert('Please Enter Atlist One Item ...');
            return
        }

 
 //       if ($('#ItemNm').val() == "0" || $('#ItemNm').val() == "") {
 //           $('#ItemNm').focus();
 //           alert('Please Enter Item Name ...');
 //           return
 //}

        debugger;
          
        var data = new FormData(); 
        data.append("acctname", $("#acctname").val());
        data.append("mstprtc", $("#mstprtc").val());
        data.append("mstContactPerson", $("#mstContactPerson").val());
        data.append("mstcode", $("#mstcode").val());
        data.append("mstdate", $("#mstdate").val());
        data.append("sItemDet", $("#sItemDet").val());
        
        data.append("msttype", "1147");
        data.append("sMstdate", $("#sMstdate").val()); data.append("compcode", "62");
        data.append("ChallanDate", $("#ChallanDate").val());
        data.append("mstdued", $("#mstdued").val());
        //data.append("mstchnH", $("#mstchnH").val());
        data.append("PartyID", $("#PartyID").val());
        data.append("mstchno", $("#mstchno").val());  //data.append("mstchnV", $("#mstchnV").val()); 
        data.append("acctledg", $("#acctledg").val());
        data.append("EMail", $("#EMail").val());
        data.append("NewMobile", $("#NewMobile").val());
        data.append("mstrema", $("#mstrema").val());
        data.append("mstContactType", $("#mstContactType").val());
        data.append("mstrvsc", $("#mstrvsc").val());
        data.append("acctstat", $("#acctstat").val());
        data.append("mstJobNo", $("#mstJobNo").val());
        data.append("mstDrawNo", $("#mstDrawNo").val());
        data.append("ItemNm", $('#ItemNm :selected').text());
        data.append("ItemID", $("#ItemNm").val());

        data.append("mstpdc", $("#mstrfvc").val());
        data.append("mstactpay", $("#mstrfvt").val());

        data.append("mstrfvc", $("#mstrfvc").val());
        data.append("mstrfvt", $("#mstrfvt").val());
        data.append("mstexec", $("#mstexec").val());

        console.log(typeof data);

        $.ajax
        ({
            url: "/Quotation/ParkLead",
            type: "POST",
            data: data,
            contentType: false,
            processData: false,
            success: function (response) {
                if (response != null) {
                    if (response.IsSave == "1") {
                        alert('Saved Successfully ...');
                        $("#mstprtc").val(response.mstprtc);
                        $("#mstcode").val(response.mstcode); $("#mstchno").val(response.mstchno);
                        $("#acctname").val('');  $("#mstContactPerson").val('');  $("#mstrvsc").val('');
                        $("#mstdate").val(''); $("#sItemDet").val(''); $("#mstdued").val(''); $("#mstchnH").val(''); $("#PartyID").val('');
                         $("#acctledg").val(''); $("#EMail").val(''); $("#NewMobile").val(''); $("#Remark").val('');
                        $('#ShowTable_Lead').html(''); $("#mstDrawNo").val(''); $("#mstJobNo").val(''); $("#acctstat").val(''); $("#mstrvsc").val('');
                        $("#mstContactType").val(''); $("#mstrema").val(''); $("#ItemNm").val(''); $("#ItemID").val('');
                        $("#mstrfvt").val(''); $("#mstrfvc").val(''); $("#mstexec").val('');

                        itm = [];
                        //SetVoucherNo();
                        GetCalling();
                    }
                    else {
                        alert('Not Saved Successfully ...');
                    }
                }
            }
        });
    });

    function FillSubCategory() {
        try{
        debugger; 
        $('#subCategory').empty();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetSubCategoryInfo", "ItemSetup")',
            data: { "query": "", 'catcode': $('#category').val() },
            success: function (data) {
                var opt = new Option('--Select--', 0);
                $("#subCategory").append(opt);

                for (var i = 0; i < data.length; i++) {
                    opt = new Option(data[i].Value, data[i].Key);
                    $("#subCategory").append(opt);
                }                  
            } 
        });
        }
        catch (err) {
            alert(err.message);
        }
    }

     function FillCity() {
          debugger;
          $('#mstrvsc').empty(); 
          $.get("../Master/GetCityList", { iState: $("#acctstat").val() }, function (data) {
              if (data != null) {
                  var opt = new Option('--Select--', 0);
                  $("#mstrvsc").append(opt);

                  for (var i = 0; i < data.length; i++) {
                      opt = new Option(data[i].cityname, data[i].citycode);
                      $("#mstrvsc").append(opt);
                  }
              }
          });
      }

    function GenratedLeadItem(itm) {
        if (itm.length > 0) {
            var $table = $('<table class="table table-fixed table-bordered j_table_new table-striped"/>');

            var $tbody = $('<tbody style="height:126px;"/>');
            var iTotal = 0;
            var iTax = 0;

            $.each(itm, function (i, val) {
                var $row = $('<tr/>');
                //$row.append($('<td width=2%"/>').html(i + 1));

                //$row.append($('<td width="13%"/>').html(val.CateNm));
                //$row.append($('<td width="15%"/>').html(val.SubCateNm));
                $row.append($('<td width="30%"/>').html(val.ddlItem));

                $row.append($('<td width="10%"/>').html(val.itdquan));
                $row.append($('<td width="10%"/>').html(val.itdrate));
                //$row.append($('<td width="10%"/>').html(val.Sitdexpd));
                $row.append($('<td width="10%"/>').html(val.Amt));

                $row.append($('<td width="30%"/>').html(val.itdrema));
                $row.append($('<td width="10%"/>').html('<button type="button" id="btnLeadDelete" class="deleteContact_Lead btn btn btn-danger btn-xs"><img src="../../Images/remove.png" /></button>'));
                $tbody.append($row);
            });
            $table.append($tbody);
            $('#ShowTable_Lead').html($table);
            $('#sItemDet').val('{"LstItem":' + JSON.stringify(itm) + '}');
        }
    }

    function getItems() {
        try {
            debugger;
            $('#ItemNm').empty();
            if ($("#subCategory").val() != null) {
                $.ajax({
                    cache: false,
                    async: false,
                    type: "POST",
                    url: "@Url.Action("GetItemInfo", "ItemSetup")",
                    data: { "comp": 62, "subcat": $("#subCategory").val() },
                    success: function (data) {
                        var opt = new Option('--Select--', 0);
                        $("#ItemNm").append(opt);

                        for (var i = 0; i < data.length; i++) {
                            opt = new Option(data[i]["Desc"], data[i]["itemcode"]);
                            $("#ItemNm").append(opt);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to Retrieve Status.');
                    }
                });
            }
        }
        catch (err) {
            alert(err.message);
        }
    }

     

     </script>

<script type="text/javascript">
   
    function getNetAmt() {
        var Qty = 0; Rate = 0; Amt = 0;  
        debugger;
        if ($('#Qty').val() != "") Qty = $('#Qty').val(); else Qty = 0;
        if ($('#Rate').val() != "") Rate = $('#Rate').val(); else Rate = 0;
        
          Amt = (Qty * Rate).toFixed(2);
        
          $('#Amt').val(Amt);

    }

    $("#NewMobile").keypress(function (e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            e.preventDefault();
            return false;
        }
    });
 
 //(function (global) {



 //    var _hash = "!";
 //    var noBackPlease = function () {
 //        global.location.href += "#";

 //        // making sure we have the fruit available for juice....
 //        // 50 milliseconds for just once do not cost much (^__^)
 //        global.setTimeout(function () {
 //            global.location.href += "!";
 //        }, 50);
 //    };

 //    // Earlier we had setInerval here....
 //    global.onhashchange = function () {
 //        if (global.location.hash !== _hash) {
 //            global.location.hash = _hash;
 //        }
 //    };

 //    global.onload = function () { 
 //        noBackPlease(); 
 //    };

 //})(window);

</script>
<style>
.capital_let {
    text-transform:capitalize;
} 
</style>

 




 








